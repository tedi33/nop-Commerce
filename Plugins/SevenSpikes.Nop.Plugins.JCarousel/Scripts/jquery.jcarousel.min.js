/*!
 * jCarousel - Riding carousels with jQuery
 *   http://sorgalla.com/jcarousel/
 *
 * Copyright (c) 2006 Jan Sorgalla (http://sorgalla.com)
 * Dual licensed under the MIT (http://www.opensource.org/licenses/mit-license.php)
 * and GPL (http://www.opensource.org/licenses/gpl-license.php) licenses.
 *
 * Built on top of the jQuery library
 *   http://jquery.com
 *
 * Inspired by the "Carousel Component" by Bill Scott
 *   http://billwscott.com/carousel/
 */

(function (f) { var t = { vertical: !1, rtl: !1, start: 1, offset: 1, size: null, scroll: 3, visible: null, animation: "normal", easing: "swing", auto: 0, wrap: null, initCallback: null, setupCallback: null, reloadCallback: null, itemLoadCallback: null, itemFirstInCallback: null, itemFirstOutCallback: null, itemLastInCallback: null, itemLastOutCallback: null, itemVisibleInCallback: null, itemVisibleOutCallback: null, animationStepCallback: null, buttonNextHTML: "<div></div>", buttonPrevHTML: "<div></div>", buttonNextEvent: "click", buttonPrevEvent: "click", buttonNextCallback: null, buttonPrevCallback: null, itemFallbackDimension: null }, q = !1; f(window).bind("load.jcarousel", function () { q = !0 }); f.jcarousel = function (a, c) { this.options = f.extend({}, t, c || {}); this.autoStopped = this.locked = !1; this.buttonPrevState = this.buttonNextState = this.buttonPrev = this.buttonNext = this.list = this.clip = this.container = null; c && void 0 !== c.rtl || (this.options.rtl = "rtl" == (f(a).attr("dir") || f("html").attr("dir") || "").toLowerCase()); this.wh = this.options.vertical ? "height" : "width"; this.lt = this.options.vertical ? "top" : this.options.rtl ? "right" : "left"; for (var b = "", d = a.className.split(" "), g = 0; g < d.length; g++) if (-1 != d[g].indexOf("jcarousel-skin")) { f(a).removeClass(d[g]); b = d[g]; break } "UL" == a.nodeName.toUpperCase() || "OL" == a.nodeName.toUpperCase() ? (this.list = f(a), this.clip = this.list.parents(".jcarousel-clip"), this.container = this.list.parents(".jcarousel-container")) : (this.container = f(a), this.list = this.container.find("ul,ol").eq(0), this.clip = this.container.find(".jcarousel-clip")); 0 === this.clip.size() && (this.clip = this.list.wrap("<div></div>").parent()); 0 === this.container.size() && (this.container = this.clip.wrap("<div></div>").parent()); "" !== b && -1 == this.container.parent()[0].className.indexOf("jcarousel-skin") && this.container.wrap('<div class=" ' + b + '"></div>'); this.buttonPrev = f(".jcarousel-prev", this.container); 0 === this.buttonPrev.size() && null !== this.options.buttonPrevHTML && (this.buttonPrev = f(this.options.buttonPrevHTML).appendTo(this.container)); this.buttonPrev.addClass(this.className("jcarousel-prev")); this.buttonNext = f(".jcarousel-next", this.container); 0 === this.buttonNext.size() && null !== this.options.buttonNextHTML && (this.buttonNext = f(this.options.buttonNextHTML).appendTo(this.container)); this.buttonNext.addClass(this.className("jcarousel-next")); this.clip.addClass(this.className("jcarousel-clip")).css({ position: "relative" }); this.list.addClass(this.className("jcarousel-list")).css({ overflow: "hidden", position: "relative", top: 0, margin: 0, padding: 0 }).css(this.options.rtl ? "right" : "left", 0); this.container.addClass(this.className("jcarousel-container")).css({ position: "relative" }); !this.options.vertical && this.options.rtl && this.container.addClass("jcarousel-direction-rtl").attr("dir", "rtl"); var l = null !== this.options.visible ? Math.floor(this.clipping() / this.options.visible) : null, b = this.list.children("li"), e = this; if (0 < b.size()) { var h = 0, k = this.options.offset; b.each(function () { e.format(this, k++); h += e.dimension(this, l) }); this.list.css(this.wh, h + 100 + "px"); c && void 0 !== c.size || (this.options.size = b.size()) } this.container.css("display", "block"); this.buttonNext.css("display", "block"); this.buttonPrev.css("display", "block"); this.funcNext = function () { e.next() }; this.funcPrev = function () { e.prev() }; this.funcResize = function () { e.resizeTimer && clearTimeout(e.resizeTimer); e.resizeTimer = setTimeout(function () { e.reload() }, 100) }; null !== this.options.initCallback && this.options.initCallback(this, "init"); !q && f.browser.safari ? (this.buttons(!1, !1), f(window).bind("load.jcarousel", function () { e.setup() })) : this.setup() }; var g = f.jcarousel; g.fn = g.prototype = { jcarousel: "0.2.8" }; g.fn.extend = g.extend = f.extend; g.fn.extend({ setup: function () { this.prevLast = this.prevFirst = this.last = this.first = null; this.animating = !1; this.tail = this.resizeTimer = this.timer = null; this.inTail = !1; if (!this.locked) { this.list.css(this.lt, this.pos(this.options.offset) + "px"); var a = this.pos(this.options.start, !0); this.prevFirst = this.prevLast = null; this.animate(a, !1); f(window).unbind("resize.jcarousel", this.funcResize).bind("resize.jcarousel", this.funcResize); null !== this.options.setupCallback && this.options.setupCallback(this) } }, reset: function () { this.list.empty(); this.list.css(this.lt, "0px"); this.list.css(this.wh, "10px"); null !== this.options.initCallback && this.options.initCallback(this, "reset"); this.setup() }, reload: function () { null !== this.tail && this.inTail && this.list.css(this.lt, g.intval(this.list.css(this.lt)) + this.tail); this.tail = null; this.inTail = !1; null !== this.options.reloadCallback && this.options.reloadCallback(this); if (null !== this.options.visible) { var a = this, c = Math.floor(this.clipping() / this.options.visible), b = 0, d = 0; this.list.children("li").each(function (g) { b += a.dimension(this, c); parseInt(jQuery(this).attr("jcarouselindex")) < a.first && (d = b) }); this.list.css(this.wh, b + "px"); this.list.css(this.lt, -d + "px") } this.scroll(this.first, !1) }, lock: function () { this.locked = !0; this.buttons() }, unlock: function () { this.locked = !1; this.buttons() }, size: function (a) { void 0 !== a && (this.options.size = a, this.locked || this.buttons()); return this.options.size }, has: function (a, c) { void 0 !== c && c || (c = a); null !== this.options.size && c > this.options.size && (c = this.options.size); for (var b = a; b <= c; b++) { var d = this.get(b); if (!d.length || d.hasClass("jcarousel-item-placeholder")) return !1 } return !0 }, get: function (a) { return f(">.jcarousel-item-" + a, this.list) }, add: function (a, c) { var b = this.get(a), d = 0, s = f(c); if (0 === b.length) for (var l, e = g.intval(a), b = this.create(a) ; ;) { if (l = this.get(--e), 0 >= e || l.length) { 0 >= e ? this.list.prepend(b) : l.after(b); break } } else d = this.dimension(b); "LI" == s.get(0).nodeName.toUpperCase() ? (b.replaceWith(s), b = s) : b.empty().append(c); this.format(b.removeClass(this.className("jcarousel-item-placeholder")), a); s = null !== this.options.visible ? Math.ceil(this.clipping() / this.options.visible) : null; d = this.dimension(b, s) - d; 0 < a && a < this.first && this.list.css(this.lt, g.intval(this.list.css(this.lt)) - d + "px"); this.list.css(this.wh, g.intval(this.list.css(this.wh)) + d + "px"); return b }, remove: function (a) { var c = this.get(a); if (c.length && !(a >= this.first && a <= this.last)) { var b = this.dimension(c); a < this.first && this.list.css(this.lt, g.intval(this.list.css(this.lt)) + b + "px"); c.remove(); this.list.css(this.wh, g.intval(this.list.css(this.wh)) - b + "px") } }, next: function () { null === this.tail || this.inTail ? this.scroll("both" != this.options.wrap && "last" != this.options.wrap || null === this.options.size || this.last != this.options.size ? this.first + this.options.scroll : 1) : this.scrollTail(!1) }, prev: function () { null !== this.tail && this.inTail ? this.scrollTail(!0) : this.scroll("both" != this.options.wrap && "first" != this.options.wrap || null === this.options.size || 1 != this.first ? this.first - this.options.scroll : this.options.size) }, scrollTail: function (a) { if (!this.locked && !this.animating && this.tail) { this.pauseAuto(); var c = g.intval(this.list.css(this.lt)), c = a ? c + this.tail : c - this.tail; this.inTail = !a; this.prevFirst = this.first; this.prevLast = this.last; this.animate(c) } }, scroll: function (a, c) { this.locked || this.animating || (this.pauseAuto(), this.animate(this.pos(a), c)) }, pos: function (a, c) { var b = g.intval(this.list.css(this.lt)); if (this.locked || this.animating) return b; "circular" != this.options.wrap && (a = 1 > a ? 1 : this.options.size && a > this.options.size ? this.options.size : a); for (var d = this.first > a, f = "circular" != this.options.wrap && 1 >= this.first ? 1 : this.first, l = d ? this.get(f) : this.get(this.last), e = d ? f : f - 1, h = null, k = 0, m = !1, p = 0; d ? --e >= a : ++e < a;) h = this.get(e), m = !h.length, 0 === h.length && (h = this.create(e).addClass(this.className("jcarousel-item-placeholder")), l[d ? "before" : "after"](h), null !== this.first && "circular" == this.options.wrap && null !== this.options.size && (0 >= e || e > this.options.size) && (l = this.get(this.index(e)), l.length && (h = this.add(e, l.clone(!0))))), l = h, p = this.dimension(h), m && (k += p), null !== this.first && ("circular" == this.options.wrap || 1 <= e && (null === this.options.size || e <= this.options.size)) && (b = d ? b + p : b - p); for (var f = this.clipping(), q = [], r = 0, n = 0, l = this.get(a - 1), e = a; ++r;) { h = this.get(e); m = !h.length; if (0 === h.length) { h = this.create(e).addClass(this.className("jcarousel-item-placeholder")); if (0 === l.length) this.list.prepend(h); else l[d ? "before" : "after"](h); null !== this.first && "circular" == this.options.wrap && null !== this.options.size && (0 >= e || e > this.options.size) && (l = this.get(this.index(e)), l.length && (h = this.add(e, l.clone(!0)))) } l = h; p = this.dimension(h); if (0 === p) throw Error("jCarousel: No width/height set for items. This will cause an infinite loop. Aborting..."); "circular" != this.options.wrap && null !== this.options.size && e > this.options.size ? q.push(h) : m && (k += p); n += p; if (n >= f) break; e++ } for (h = 0; h < q.length; h++) q[h].remove(); 0 < k && (this.list.css(this.wh, this.dimension(this.list) + k + "px"), d && (b -= k, this.list.css(this.lt, g.intval(this.list.css(this.lt)) - k + "px"))); k = a + r - 1; "circular" != this.options.wrap && this.options.size && k > this.options.size && (k = this.options.size); if (e > k) for (r = 0, e = k, n = 0; ++r;) { h = this.get(e--); if (!h.length) break; n += this.dimension(h); if (n >= f) break } e = k - r + 1; "circular" != this.options.wrap && 1 > e && (e = 1); this.inTail && d && (b += this.tail, this.inTail = !1); this.tail = null; "circular" != this.options.wrap && k == this.options.size && 1 <= k - r + 1 && (d = g.intval(this.get(k).css(this.options.vertical ? "marginBottom" : "marginRight")), n - d > f && (this.tail = n - f - d)); c && a === this.options.size && this.tail && (b -= this.tail, this.inTail = !0); for (; a-- > e;) b += this.dimension(this.get(a)); this.prevFirst = this.first; this.prevLast = this.last; this.first = e; this.last = k; return b }, animate: function (a, c) { if (!this.locked && !this.animating) { this.animating = !0; var b = this, d = function () { b.animating = !1; 0 === a && b.list.css(b.lt, 0); !b.autoStopped && ("circular" == b.options.wrap || "both" == b.options.wrap || "last" == b.options.wrap || null === b.options.size || b.last < b.options.size || b.last == b.options.size && null !== b.tail && !b.inTail) && b.startAuto(); b.buttons(); b.notify("onAfterAnimation"); if ("circular" == b.options.wrap && null !== b.options.size) for (var c = b.prevFirst; c <= b.prevLast; c++) null === c || c >= b.first && c <= b.last || !(1 > c || c > b.options.size) || b.remove(c) }; this.notify("onBeforeAnimation"); if (this.options.animation && !1 !== c) { var g = this.options.vertical ? { top: a } : this.options.rtl ? { right: a } : { left: a }, d = { duration: this.options.animation, easing: this.options.easing, complete: d }; f.isFunction(this.options.animationStepCallback) && (d.step = this.options.animationStepCallback); this.list.animate(g, d) } else this.list.css(this.lt, a + "px"), d() } }, startAuto: function (a) { void 0 !== a && (this.options.auto = a); if (0 === this.options.auto) return this.stopAuto(); if (null === this.timer) { this.autoStopped = !1; var c = this; this.timer = window.setTimeout(function () { c.next() }, 1E3 * this.options.auto) } }, stopAuto: function () { this.pauseAuto(); this.autoStopped = !0 }, pauseAuto: function () { null !== this.timer && (window.clearTimeout(this.timer), this.timer = null) }, buttons: function (a, c) { null == a && (a = !this.locked && 0 !== this.options.size && (this.options.wrap && "first" != this.options.wrap || null === this.options.size || this.last < this.options.size), !(this.locked || this.options.wrap && "first" != this.options.wrap) && null !== this.options.size && this.last >= this.options.size && (a = null !== this.tail && !this.inTail)); null == c && (c = !this.locked && 0 !== this.options.size && (this.options.wrap && "last" != this.options.wrap || 1 < this.first), this.locked || this.options.wrap && "last" != this.options.wrap || null === this.options.size || 1 != this.first || (c = null !== this.tail && this.inTail)); var b = this; 0 < this.buttonNext.size() ? (this.buttonNext.unbind(this.options.buttonNextEvent + ".jcarousel", this.funcNext), a && this.buttonNext.bind(this.options.buttonNextEvent + ".jcarousel", this.funcNext), this.buttonNext[a ? "removeClass" : "addClass"](this.className("jcarousel-next-disabled")).attr("disabled", a ? !1 : !0), null !== this.options.buttonNextCallback && this.buttonNext.data("jcarouselstate") != a && this.buttonNext.each(function () { b.options.buttonNextCallback(b, this, a) }).data("jcarouselstate", a)) : null !== this.options.buttonNextCallback && this.buttonNextState != a && this.options.buttonNextCallback(b, null, a); 0 < this.buttonPrev.size() ? (this.buttonPrev.unbind(this.options.buttonPrevEvent + ".jcarousel", this.funcPrev), c && this.buttonPrev.bind(this.options.buttonPrevEvent + ".jcarousel", this.funcPrev), this.buttonPrev[c ? "removeClass" : "addClass"](this.className("jcarousel-prev-disabled")).attr("disabled", c ? !1 : !0), null !== this.options.buttonPrevCallback && this.buttonPrev.data("jcarouselstate") != c && this.buttonPrev.each(function () { b.options.buttonPrevCallback(b, this, c) }).data("jcarouselstate", c)) : null !== this.options.buttonPrevCallback && this.buttonPrevState != c && this.options.buttonPrevCallback(b, null, c); this.buttonNextState = a; this.buttonPrevState = c }, notify: function (a) { var c = null === this.prevFirst ? "init" : this.prevFirst < this.first ? "next" : "prev"; this.callback("itemLoadCallback", a, c); this.prevFirst !== this.first && (this.callback("itemFirstInCallback", a, c, this.first), this.callback("itemFirstOutCallback", a, c, this.prevFirst)); this.prevLast !== this.last && (this.callback("itemLastInCallback", a, c, this.last), this.callback("itemLastOutCallback", a, c, this.prevLast)); this.callback("itemVisibleInCallback", a, c, this.first, this.last, this.prevFirst, this.prevLast); this.callback("itemVisibleOutCallback", a, c, this.prevFirst, this.prevLast, this.first, this.last) }, callback: function (a, c, b, d, g, l, e) { if (null != this.options[a] && ("object" == typeof this.options[a] || "onAfterAnimation" == c)) { var h = "object" == typeof this.options[a] ? this.options[a][c] : this.options[a]; if (f.isFunction(h)) { var k = this; if (void 0 === d) h(k, b, c); else if (void 0 === g) this.get(d).each(function () { h(k, this, d, b, c) }); else { a = function (a) { k.get(a).each(function () { h(k, this, a, b, c) }) }; for (var m = d; m <= g; m++) null === m || m >= l && m <= e || a(m) } } } }, create: function (a) { return this.format("<li></li>", a) }, format: function (a, c) { a = f(a); for (var b = a.get(0).className.split(" "), d = 0; d < b.length; d++) -1 != b[d].indexOf("jcarousel-") && a.removeClass(b[d]); a.addClass(this.className("jcarousel-item")).addClass(this.className("jcarousel-item-" + c)).css({ "float": this.options.rtl ? "right" : "left", "list-style": "none" }).attr("jcarouselindex", c); return a }, className: function (a) { return a + " " + a + (this.options.vertical ? "-vertical" : "-horizontal") }, dimension: function (a, c) { var b = f(a); if (null == c) return this.options.vertical ? b.outerHeight(!0) || g.intval(this.options.itemFallbackDimension) : b.outerWidth(!0) || g.intval(this.options.itemFallbackDimension); var d = this.options.vertical ? c - g.intval(b.css("marginTop")) - g.intval(b.css("marginBottom")) : c - g.intval(b.css("marginLeft")) - g.intval(b.css("marginRight")); f(b).css(this.wh, d + "px"); return this.dimension(b) }, clipping: function () { return this.options.vertical ? this.clip[0].offsetHeight - g.intval(this.clip.css("borderTopWidth")) - g.intval(this.clip.css("borderBottomWidth")) : this.clip[0].offsetWidth - g.intval(this.clip.css("borderLeftWidth")) - g.intval(this.clip.css("borderRightWidth")) }, index: function (a, c) { null == c && (c = this.options.size); return Math.round(((a - 1) / c - Math.floor((a - 1) / c)) * c) + 1 } }); g.extend({ defaults: function (a) { return f.extend(t, a || {}) }, intval: function (a) { a = parseInt(a, 10); return isNaN(a) ? 0 : a }, windowLoaded: function () { q = !0 } }); f.fn.jcarousel = function (a) { if ("string" == typeof a) { var c = f(this).data("jcarousel"), b = Array.prototype.slice.call(arguments, 1); return c[a].apply(c, b) } return this.each(function () { var b = f(this).data("jcarousel"); b ? (a && f.extend(b.options, a), b.reload()) : f(this).data("jcarousel", new g(this, a)) }) } })(jQuery);
